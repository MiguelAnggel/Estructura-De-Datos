Problema a resolver
En equipos de máximo 5 integrantes, se desarrollarán diversos algoritmos de ordenamiento utilizando el lenguaje de programación revisado en clase.

Todos los equipos deberán desarrollar como mínimo el algoritmo de ordenamiento BubbleSort (también conocido como algoritmo de burbuja); adicionalmente, se deberán desarrollar 4 algoritmos seleccionados de entre los grupos que se enlistan a continuación, dando un total de 5:
Grupo 1: SelectionSort o InsertionSort
Grupo 2: ShellSort, MergeSort o QuickSort
Grupo 3: HeapSort, CombSort o CocktailSort
Grupo 4: RadixSort o BucketSort
Programa a desarrollar
Se deberá generar un programa general que permita ejecutar los 5 algoritmos de ordenamiento desarrollados, corriendo sobre una lista de números enteros, generados aleatoriamente.

Se deben poder realizar las siguientes funciones:
Mostrar un menú que permita elegir el algoritmo de ordenamiento a ejecutar.
Ejecutar cualquiera de los algoritmos de ordenamiento sobre una lista generada aleatoriamente de tamaño N (indicado por el usuario), con la opción de ejecutar nuevamente con otro valor de N o regresar al menú principal
Comparar los tiempos de ejecución de cualquier par de algoritmos de ordenamiento desarrollados, ordenando la misma lista original y mostrando el tiempo utilizado por cada algoritmo.
En cualquiera de las opciones se debe poder ejecutar nuevamente los algoritmos, con una nueva lista aleatoria.
Recursos
Se pone a su disposición un visualizador de algoritmos de ordenamiento para una mejor comprensión de los mismos (https://www.hackerearth.com/practice/algorithms/sorting/bubble-sort/visualize/)
Se adjunta también una propuesta para el diseño de la navegación de la aplicación a desarrollar, sin embargo, queda a creatividad del equipo la implementación.
Entrega
Se deberá entregar un archivo empaquetado ZIP con los códigos fuentes desarrollados.
Cada algoritmo de ordenamiento se deberá generar en su propia clase, que será utilizada desde el archivo principal
Se revisará y cuestionará la ejecución de los algoritmo en una sesión adicional.